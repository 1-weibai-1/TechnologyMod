buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://plugins.gradle.org/m2/' }
        maven { url = 'https://maven.parchmentmc.org' }

        maven { url = 'https://repo.spongepowered.org/repository/maven-public' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'gradle.plugin.com.matthewprenger', name: 'CurseGradle', version:'1.4.0'
        classpath group: 'org.parchmentmc', name: 'librarian', version: '1.+'
        classpath group: 'com.modrinth.minotaur', name: 'Minotaur', version: '2.+'

        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'com.modrinth.minotaur'
apply plugin: 'com.matthewprenger.cursegradle'

apply plugin: 'org.spongepowered.mixin'

version = '1.0'
group = 'net.wei_bai.technology'
archivesBaseName = 'technology'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)



minecraft {
    mappings channel: 'official', version: '1.18.2'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            arg '-mixin.config=technolog.mixins.json'
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'terminal.ansi', 'true'

            mods {
                technology {
                    source sourceSets.main
                }
                technologytest {
                    source sourceSets.test
                }
            }
        }

        server {
            workingDirectory project.file('run')
            arg '-mixin.config=technolog.mixins.json'
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'terminal.ansi', 'true'

            mods {
                technology {
                    source sourceSets.main
                }
                technologytest {
                    source sourceSets.test
                }
            }
        }


        data {
            workingDirectory project.file('run')

            args '--mod', 'technology', '--all', '--output', file('src/generated/resources/')
            arg '-mixin.config=technolog.mixins.json'
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'terminal.ansi', 'true'

            mods {
                technology {
                    source sourceSets.main
                }
                technologytest {
                    source sourceSets.test
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "technology.refmap.json"
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.2.10'

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    compileOnly fg.deobf("mezz.jei:jei-1.18.2:${version_jei}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-1.18.2:${version_jei}")

}

repositories {
    maven {
// location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
// location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
}

jar {
    manifest {
        attributes([
                'Specification-Title': '${mod_name}',
                'Specification-Vendor': 'wei_bai',
                'Specification-Version': '1',
                'Implementation-Title': '${mod_name}',
                'Implementation-Version': project.jar.archiveVersion,
                'Implementation-Vendor': 'wei_bai',
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'MixinConfigs': 'technolog.mixins.json'
        ])
    }
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

apply from: 'mcreator.gradle'

